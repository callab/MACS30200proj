select(par, mean) %>%
mutate(subject_numeral = c(1))
parent_overdisp_intercepts <- fit_sum_df %>%
filter(grepl("^over_p", fit_sum_df$par)) %>%
select(par, mean) %>%
mutate(subject_numeral = c(1))
over_disps <- one_file_utts %>%
group_by(subject_numeral, session) %>%
summarise(var_length = var(length),
mean_length = mean(length)) %>%
mutate(overdisp = ((mean_length)^2)/(var_length - mean_length)) %>%
#filter(subject_numeral %in% utt_parent) %>%
gather(measure, value, mean_length, overdisp)
empirical_means <- over_disps %>%
group_by(measure, subject_numeral) %>%
#filter(session %in% c(5,6,7)) %>%
summarise(value = mean(value, na.rm = T)) %>%
mutate(type = "empirical")
parent_stats <- left_join(parent_overdisp_intercepts, parent_mean_intercepts, 'subject_numeral') %>%
rename(mean_length = mean.y,
overdisp = mean.x) %>%
select(subject_numeral, mean_length, overdisp) %>%
gather(measure, value, mean_length, overdisp) %>%
mutate(type = "model") %>%
bind_rows(empirical_means) %>%
spread(type, value)
View(parent_mean_slopes)
parent_over_slopes <- fit_sum_df%>%
filter(grepl("^alpha_over_p[",fit_sum_df$par)) %>%
select(par, mean) %>%
mutate(subject_numeral= c(1))
parent_over_slopes <- fit_sum_df%>%
filter(grepl("^alpha_over_p\[",fit_sum_df$par)) %>%
parent_mean_slopes <- fit_sum_df %>%
filter(grepl("^alpha_mean_p$",fit_sum_df$par)) %>%
select(par, mean)
parent_mean_slopes <- fit_sum_df %>%
filter(grepl("^alpha_mean_p",fit_sum_df$par)) %>%
select(par, mean)
parent_mean_slopes <- fit_sum_df %>%
filter(-grepl("^alpha_mean_p_long",fit_sum_df$par)) %>%
select(par, mean)
?not
parent_mean_slopes <- fit_sum_df %>%
filter(!grepl("^alpha_mean_p_long",fit_sum_df$par)) %>%
select(par, mean)
parent_mean_slopes <- fit_sum_df %>%
filter(!grepl("^alpha_mean_p_long",fit_sum_df$par)) %>%
filter(grepl("^alpha_mean_p", parent_mean_slopes)) %>%
select(par, mean)
parent_mean_slopes <- fit_sum_df %>%
filter(!grepl("^alpha_mean_p_long",fit_sum_df$par)) %>%
filter(grepl("^alpha_mean_p", parent_mean_slopes$par)) %>%
select(par, mean)
fit_summary <- summary(fit)
fit_sum_df <- as.data.frame(fit_summary$summary) %>%
tibble::rownames_to_column(var = 'par')
parent_over_slopes <- fit_sum_df%>%
filter(!grepl("^alpha_over_p_long",fit_sum_df$par)) %>%
filter(grepl("^alpha_over_p",parent_over_slopes$par)) %>%
select(par, mean) %>%
mutate(subject_numeral= c(1))
fit_sum_df <- as.data.frame(fit_summary$summary) %>%
tibble::rownames_to_column(var = 'par')
parent_over_slopes <- fit_sum_df%>%
filter(!grepl("^alpha_over_p_long",fit_sum_df$par)) %>%
filter(grepl("^alpha_over_p",parent_over_slopes$par)) %>%
select(par, mean)
parent_mean_slopes <- fit_sum_df %>%
filter(!grepl("^alpha_mean_p_long",fit_sum_df$par)) %>%
filter(grepl("^alpha_mean_p", parent_mean_slopes$par)) %>%
select(par, mean)
parent_mean_slopes <- fit_sum_df %>%
filter(!grepl("^alpha_mean_p_long",fit_sum_df$par)) %>%
filter(grepl("^alpha_mean_p", parent_mean_slopes$par)) %>%
select(par, mean)
parent_mean_intercepts <- fit_sum_df %>%
filter(!grepl("^mu_p_long",fit_sum_df$par)) %>%
filter(grepl("^mu_p",parent_mean_intercepts$par)) %>%
select(par, mean) %>%
mutate(subject_numeral = c(1))
parent_overdisp_intercepts <- fit_sum_df %>%
filter(!grepl("^over_p_long", fit_sum_df$par)) %>%
filter(grepl("^over_p[", parent_overdisp_intercepts$par)) %>%
select(par, mean) %>%
mutate(subject_numeral = c(1))
parent_overdisp_intercepts <- fit_sum_df %>%
filter(!grepl("^over_p_long", fit_sum_df$par)) %>%
filter(grepl("^over_p", parent_overdisp_intercepts$par)) %>%
select(par, mean) %>%
mutate(subject_numeral = c(1))
parent_mean_slopes <- fit_sum_df %>%
filter(!grepl("^alpha_mean_p_long",fit_sum_df$par)) %>%
filter(grepl("^alpha_mean_p", parent_mean_slopes)) %>%
select(par, mean)
parent_mean_slopes <- fit_sum_df %>%
filter(!grepl("^alpha_mean_p_long",fit_sum_df$par)) %>%
filter(grepl("^alpha_mean_p", parent_mean_slopes$par)) %>%
select(par, mean)
parent_mean_slopes <- fit_sum_df %>%
filter(!grepl("^alpha_mean_p_long",fit_sum_df$par)) %>%
filter(grepl("^alpha_mean_p", fit_sum_df$par)) %>%
select(par, mean)
parent_mean_slopes <- fit_sum_df %>%
filter(!grepl("^alpha_mean_p_long",fit_sum_df$par)) %>%
filter(grepl("^alpha_mean_p") %>%
select(par, mean)
parent_mean_intercepts <- fit_sum_df %>%
parent_mean_slopes <- fit_sum_df %>%
filter(!grepl("^alpha_mean_p_long",fit_sum_df$par)) %>%
filter(grepl("^alpha_mean_p")) %>%
select(par, mean)
one_file_utts <- utterances %>%
filter(!is.na(p_chat)) %>%
select(session,p_chat,subject) %>%
mutate(length = str_count(p_chat, " ")) %>%
filter(length > 0)
parentIDs <-  cbind(unique(one_file_utts$subject), seq(1,length(unique(one_file_utts$subject)))) %>%
as.data.frame()
colnames(parentIDs) <- c('subject', 'subject_numeral')
one_file_utts <- utterances %>%
filter(!is.na(p_chat)) %>%
select(session,p_chat,subject) %>%
mutate(length = str_count(p_chat, " ")) %>%
filter(length > 0)
library(tidyverse)
library(stringr)
library(rstan)
library(bayesplot)
library(tidyboot)
library(shinystan)
library(lme4)
library(feather)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
one_file_utts <- utterances %>%
filter(!is.na(p_chat)) %>%
select(session,p_chat,subject) %>%
mutate(length = str_count(p_chat, " ")) %>%
filter(length > 0)
parentIDs <-  cbind(unique(one_file_utts$subject), seq(1,length(unique(one_file_utts$subject)))) %>%
as.data.frame()
colnames(parentIDs) <- c('subject', 'subject_numeral')
one_file_utts <- one_file_utts %>%
left_join(parentIDs) %>%
mutate(mean_length = mean(length)) %>%
mutate(session = session - 6) %>%
group_by(subject_numeral, session) %>%
#filter(subject_numeral %in% c(1,2)) %>%
#filter(session %in% c(-1,0,1)) %>%
ungroup()
over_disps <- one_file_utts %>%
group_by(subject_numeral, session) %>%
summarise(var_length = var(length),
mean_length = mean(length)) %>%
mutate(overdisp = ((mean_length)^2)/(var_length - mean_length)) %>%
#filter(subject_numeral %in% utt_parent) %>%
gather(measure, value, mean_length, overdisp)
empirical_means <- over_disps %>%
group_by(measure, subject_numeral) %>%
#filter(session %in% c(5,6,7)) %>%
summarise(value = mean(value, na.rm = T)) %>%
mutate(type = "empirical")
over_disps %>%
ggplot(aes(x = session, y = value, color = measure,
group = interaction(as.factor(subject_numeral), measure))) +
facet_wrap(~ as.factor(subject_numeral)) +
geom_line() +
geom_smooth(method = "lm", color = "black", size = .1) +
theme(legend.position = "none")
one_file_utts %>%
group_by(session, subject_numeral) %>%
distinct(mean_length) %>%
# filter(subject_numeral %in% n_session$subject_numeral) %>%
ggplot(aes(x = session, y = mean_length, color = as.factor(subject_numeral),
group = as.factor(subject_numeral))) +
facet_wrap(~ as.factor(subject_numeral)) +
geom_line() +
geom_smooth(method = "lm", color = "black") +
theme(legend.position = "none")
over_disps %>%
filter(!is.na(var_length))%>%
ggplot(aes(x = session, y = value, color = measure,
group = interaction(as.factor(subject_numeral), measure))) +
facet_wrap(~ as.factor(subject_numeral)) +
geom_line() +
geom_smooth(method = "lm", color = "black", size = .1) +
theme(legend.position = "none")
over_disps %>%
filter(measure = 'mean_length') %>%
filter(!is.na(var_length)) %>%
ggplot(aes(x = session, y = value, group = as.factor(subject_numeral))) +
facet_wrap(~ as.factor(subject_numeral)) +
geom_line() +
geom_smooth(method = 'lm', color = 'black', size = .1) +
theme(legend.position = 'none')
over_disps %>%
filter(measure == 'mean_length') %>%
filter(!is.na(var_length)) %>%
ggplot(aes(x = session, y = value, group = as.factor(subject_numeral))) +
facet_wrap(~ as.factor(subject_numeral)) +
geom_line() +
geom_smooth(method = 'lm', color = 'black', size = .1) +
theme(legend.position = 'none')
over_disps %>%
filter(measure == 'mean_length') %>%
filter(!is.na(var_length)) %>%
ggplot(aes(x = session, y = value)) +
facet_wrap(~ as.factor(subject_numeral)) +
geom_line() +
geom_smooth(method = 'lm', color = 'black', size = .1) +
theme(legend.position = 'none')
over_disps <- one_file_utts %>%
group_by(subject_numeral, session) %>%
summarise(var_length = var(length),
mean_length = mean(length)) %>%
mutate(overdisp = ((mean_length)^2)/(var_length - mean_length)) %>%
filter(!is.na(var_length)) %>%
#filter(subject_numeral %in% utt_parent) %>%
gather(measure, value, mean_length, overdisp)
empirical_means <- over_disps %>%
group_by(measure, subject_numeral) %>%
#filter(session %in% c(5,6,7)) %>%
summarise(value = mean(value, na.rm = T)) %>%
mutate(type = "empirical")
over_disps %>%
filter(measure == 'mean_length') %>%
#filter(!is.na(var_length)) %>%
ggplot(aes(x = session, y = value)) +
facet_wrap(~ as.factor(subject_numeral)) +
geom_line() +
geom_smooth(method = 'lm', color = 'black', size = .1) +
theme(legend.position = 'none')
ggplot(all_utt_lengths, aes(x = session, y =mean)) +
geom_pointrange(aes(ymin = mean - sem, ymax = mean +sem)) +
geom_line() +
theme(legend.position = "none")
all_utt_lengths <- utterances %>%
left_join(parentIDs) %>%
filter(!is.na(p_chat)) %>%
select(session,p_chat,subject_numeral) %>%
mutate(length = str_count(p_chat, " ")) %>%
filter(length > 0) %>%
group_by(session, subject_numeral) %>%
summarise(length = mean(length)) %>%
summarise(sem = sd(length)/sqrt(n()-1),
mean = mean(length))
ggplot(all_utt_lengths, aes(x = session, y =mean)) +
geom_pointrange(aes(ymin = mean - sem, ymax = mean +sem)) +
geom_line() +
theme(legend.position = "none")
over_disps %>%
filter(measure == 'mean_length') %>%
#filter(!is.na(var_length)) %>%
ggplot(aes(x = session, y = value)) +
facet_wrap(~ as.factor(subject_numeral)) +
geom_line() +
geom_smooth(method = 'lm', color = 'black', size = .1) +
theme(legend.position = 'none')
over_disps %>%
filter(measure == 'mean_length') %>%
#filter(!is.na(var_length)) %>%
ggplot(aes(x = session, y = value)) +
facet_wrap(~ as.factor(subject_numeral)) +
geom_line() +
#geom_smooth(method = 'lm', color = 'black', size = .1) +
theme(legend.position = 'none')
over_disps %>%
filter(!is.na(var_length))%>%
ggplot(aes(x = session, y = value, color = measure,
group = interaction(as.factor(subject_numeral), measure))) +
facet_wrap(~ as.factor(subject_numeral)) +
geom_line() +
geom_smooth(method = "lm", color = "black", size = .1) +
theme(legend.position = "none")
one_file_utts %>%
group_by(session, subject_numeral) %>%
distinct(mean_length) %>%
# filter(subject_numeral %in% n_session$subject_numeral) %>%
ggplot(aes(x = session, y = mean_length, color = as.factor(subject_numeral),
group = as.factor(subject_numeral))) +
facet_wrap(~ as.factor(subject_numeral)) +
geom_line() +
geom_smooth(method = "lm", color = "black") +
theme(legend.position = "none")
oin(parentIDs) %>%
filter(!is.na(p_chat)) %>%
select(session,p_chat,subject_numeral) %>%
mutate(length = str_count(p_chat, " ")) %>%
filter(length > 0) %>%
group_by(session, subject_numeral) %>%
summarise(length = mean(length)) %>%
summarise(sem = sd(length)/sqrt(n()-1),
mean = mean(length))
all_utt_lengths <- utterances %>%
left_join(parentIDs) %>%
filter(!is.na(p_chat)) %>%
select(session,p_chat,subject_numeral) %>%
mutate(length = str_count(p_chat, " ")) %>%
filter(length > 0) %>%
group_by(session, subject_numeral) %>%
summarise(length = mean(length)) %>%
summarise(sem = sd(length)/sqrt(n()-1),
mean = mean(length))
View(all_utt_lengths)
indiv_slopes <- utterances %>%
left_join(parentIDs) %>%
filter(!is.na(p_chat)) %>%
select(session,p_chat,subject_numeral) %>%
mutate(length = str_count(p_chat, " ")) %>%
filter(length > 0) %>%
group_by(subject_numeral, session) %>%
summarise(length = mean(length, na.rm = T)) %>%
filter(!is.na(length)) %>%
group_by(subject_numeral) %>%
spread(session, length) %>%
mutate(slope = `12` - `1`) %>%
filter(!is.na(slope))
n_session <- one_file_utts %>%
group_by(subject_numeral, session) %>%
distinct(mean_length) %>%
group_by(subject_numeral) %>%
summarise(n = n()) %>%
filter(n >= 5)
n_subject <- one_file_utts %>%
group_by(subject_numeral, session) %>%
distinct(mean_length) %>%
group_by(session) %>%
summarise(n = n()) %>%
filter(n >= 5)
over_disps <- one_file_utts %>%
group_by(subject_numeral, session) %>%
summarise(var_length = var(length),
mean_length = mean(length)) %>%
mutate(overdisp = var_length - mean_length) %>%
filter(subject_numeral %in% n_session$subject_numeral) %>%
gather(measure, value, mean_length, overdisp)
indiv_over_disps <- over_disps %>%
filter(measure == "overdisp") %>%
group_by(session, subject_numeral) %>%
summarise(overdisp = mean(value)) %>%
summarise(overdisp = mean(overdisp))
over_disps %>%
ggplot(aes(x = session, y = value, color = measure,
group = interaction(as.factor(subject_numeral), measure))) +
facet_wrap(~ as.factor(subject_numeral)) +
geom_line(na.rm = TRUE) +
geom_smooth(method = "lm", color = "black", size = .1) +
theme(legend.position = "none")
over_disps %>%
ggplot(aes(x = session, y = value, color = measure,
group = interaction(as.factor(subject_numeral), measure))) +
facet_wrap(~ as.factor(subject_numeral)) +
geom_line(na.rm = TRUE) +
geom_smooth(method = "lm", color = "black", size = .1) +
theme(legend.position = "none")
over_disps %>%
ggplot(aes(x = session, y = value, color = measure,
group = interaction(as.factor(subject_numeral), measure))) +
facet_wrap(~ as.factor(subject_numeral)) +
geom_line(na.rm = TRUE) +
geom_smooth(method = "lm", color = "black", size = .1) +
theme(legend.position = "none")
p <- over_disps %>%
ggplot(aes(x = session, y = value, color = measure,
group = interaction(as.factor(subject_numeral), measure))) +
facet_wrap(~ as.factor(subject_numeral)) +
geom_line(na.rm = TRUE) +
geom_smooth(method = "lm", color = "black", size = .1) +
theme(legend.position = "none")
p
LDP_DIR <- "~/ldp/data/ldp.db"
ldp
ldp
ldp <- src_sqlite(LDP_DIR)
library(tidyverse)
library(stringr)
library(rstan)
library(bayesplot)
library(tidyboot)
library(shinystan)
library(lme4)
library(feather)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
ldp <- src_sqlite(LDP_DIR)
ldp
?ldp
class(ldp)
View(ldp)
tbl(ldp, "utterances")
View(tbl(ldp, "utterances"))
View(utterances)
View(long_present)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
food <- read_csv('Food_Inspections.csv')
setwd("~/Desktop/UChicago Classes/MACS30200proj/ProblemSets/PS1")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
food <- read_csv('Food_Inspections.csv')
unique(food$City)
length(unique(food$City))
n_est <- length(unique(food$`License #`))
n_est
dim(food)
unique(food$Results)
food %>%
filter(Results=='Fail')
food %>%
filter(Results=='Fail')$Results
food %>%
filter(Results=='Fail')$Results
food %>%
filter(Results=='Fail')
size(food)
dim(food)
dim(food)[1]
failfood <- food %>%
filter(Results=='Fail')
dim(failfood)
dim(failfood)[1] / dim(food)[1]
food$Risk
unique(food$Risk)
riskyfood <- food %>%
d
riskyfood <- food %>%
filter(Risk=='Risk 1 (High)')
dim(riskyfood)[1]/dim(food)[1]
unique(food$`Inspection Type`)
inspection_type_count <- food %>%
group_by(`Inspection Type`) %>%
summarise(count = length(`Inspection Type`)) %>%
arrange(desc(count))
inspection_type_count
canvass_food <- food %>%
filter(`Inspection Type`=='Canvass')
canvass_food
dim(canvass_food)[1]/dim(food)[1]
food$Violations
unique(food$Results)
pass_food %>% food
filter(Results=='Pass')
pass_food <- food %>%
filter(Results=='Pass')
dim(pass_food)[1]/dim(food)[1]
food %>%
filter(!is.na(Risk)) %>%
filter(Risk != 'All') %>%
count(Results, Risk) %>%
ggplot(data = ., aes(Risk, n, fill=Results)) +
geom_col(position = 'fill') +
labs(title = 'Distribution of Inspection Results by Pre-Inspection Risk',
y = "") +
theme(axis.text.x = element_text(size = 7 ))
city_count <- food %>%
group_by(City)%>%
summarise(count=length(City)) %>%
arrange(desc(count))
city_count
inspection_type_count
unique(food$Results)
food %>%
filter(`Inspection Type` =='Complaint') %>%
filter(Results %in% c("Pass", "Fail","Pass w/ Conditions"))
food %>%
filter(`Inspection Type` =='Complaint') %>%
filter(Results %in% c("Pass", "Fail","Pass w/ Conditions")) %>%
count(Results, `Inspection Type`)
inspection_type_count
food %>%
filter(`Inspection Type` %in% c('Complaint', "Canvass", "License")) %>%
filter(Results %in% c("Pass", "Fail","Pass w/ Conditions")) %>%
count(Results, `Inspection Type`)
food %>%
filter(`Inspection Type` %in% c('Complaint', "Canvass", "License")) %>%
filter(Results %in% c("Pass", "Fail","Pass w/ Conditions")) %>%
count(Results, `Inspection Type`) %>%
ggplot(aes(`Inspection Type`, n, fill = Results)) +
geom_col(position = 'dodge')
food %>%
filter(`Inspection Type` %in% c('Complaint', "Canvass", "License")) %>%
filter(Results %in% c("Pass", "Fail","Pass w/ Conditions")) %>%
count(Results, `Inspection Type`) %>%
ggplot(aes(`Inspection Type`, n, fill = Results)) +
geom_col(position = 'fill')
food %>%
filter(`Inspection Type` %in% c('Complaint', "Canvass", "License")) %>%
filter(Results %in% c("Pass", "Fail","Pass w/ Conditions")) %>%
count(Results, `Inspection Type`) %>%
ggplot(aes(`Inspection Type`, n, fill = Results)) +
geom_col(position = 'fill') +
labs(title = 'Distribution of Inspection Results by Inspection Type',
y= "")
food %>%
filter(!is.na(Risk)) %>%
filter(Risk != 'All') %>%
filter(Results %in% c("Pass","Fail","Pass w/ Conditions")) %>%
count(Results, Risk) %>%
ggplot(data = ., aes(Risk, n, fill=Results)) +
geom_col(position = 'fill') +
labs(title = 'Distribution of Inspection Results by Pre-Inspection Risk',
y = "") +
theme(axis.text.x = element_text(size = 7 ))
food %>%
filter(`Inspection Type` %in% c('Complaint', "Canvass", "License")) %>%
filter(Results %in% c("Pass", "Fail","Pass w/ Conditions")) %>%
count(Results, `Inspection Type`) %>%
ggplot(aes(`Inspection Type`, n, fill = Results)) +
geom_col(position = 'fill') +
labs(title = 'Distribution of Inspection Results by Inspection Type',
y= "")
